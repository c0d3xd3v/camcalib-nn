name: Linux Release

on:
  push:
    branches:
      - 'main'
  schedule:
  - cron: "*/30 */6 * * *"

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
#  ARTIFACT:     qt-planets-linux-build.zip
#  INSTALL_DIRECTORY: ${{ github.workspace }}/install

jobs:
  build:
    runs-on:  ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ env.SOURCE_DIR }}
        run: |
          git fetch --all --tags -f    
          
      - name: Create build directory
        run:  mkdir ${{ env.SOURCE_DIR }}/continouse_dataset

      - name: setup-python
        uses: actions/setup-python@v4
        with:
          cache: 'pip' # caching pip dependencies
      - run: pip install numpy torch torchvision pillow opencv-python pandas

      - name: Get Job ID from GH API
        id: get-job-id
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
             jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
             job_id=$(echo $jobs | jq -r '.jobs[] | select(.runner_name=="${{ runner.name }}") | .id')
             echo "job_id=$job_id" >> $GITHUB_OUTPUT

      - name: Display Job ID
        run: |
             echo prev Job ID: $((${{ steps.get-job-id.outputs.job_id }} - 1))
             echo Job ID: $((${{ steps.get-job-id.outputs.job_id }}))
#            echo My full job URL is ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.get-job-id.outputs.job_id }}

      - name: Cache Build
        uses: actions/cache@v3
        with: 
          path: ${{ env.SOURCE_DIR }}/continouse_dataset
          key: ubuntu-build
          restore-keys: ubuntu-build

      - name: run python script
        working-directory: ${{ env.SOURCE_DIR }}
        run:  |
              python generate.py
              python train.py

#      - name: Zip build
#        working-directory: ${{ env.SOURCE_DIR }}
#        run:  |
#              7z a ${{ env.ARTIFACT }} ${{ env.INSTALL_DIRECTORY }}/* -r

#      - name: Save build artifact
#        uses: actions/upload-artifact@master
#        with:
#          name: ${{ env.ARTIFACT }}
#          path: ${{ env.SOURCE_DIR }}/${{ env.ARTIFACT }} 

#      - name: AppImage
#        working-directory: ${{ env.SOURCE_DIR }}/build
#        run: |
#          wget -O deploy.AppImage https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
#          chmod +x deploy.AppImage
#          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ github.workspace }}/Qt/5.15.2/gcc_64/lib/
#          cp ${{ env.SOURCE_DIR }}/linux/* .
#          ./deploy.AppImage planets-qml.desktop -appimage -no-translations -qmldir=${{ env.SOURCE_DIR }} -extra-plugins=renderers
#          mv Qt_planets_app*.AppImage ${{ env.ARTIFACT }}          
      
#      - name: Linux artefact
#        uses: actions/upload-artifact@v1
#        with:
#          name: ${{ env.ARTIFACT }}
#          path: ${{ env.SOURCE_DIR }}/build/${{ env.ARTIFACT }}
